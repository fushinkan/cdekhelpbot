from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from app.api.utils.validator import Validator
from bot.states.admin_auth import AdminAuth
from bot.keyboards.backbuttons import BackButtons
from bot.utils.invoice import StateUtils


router = Router()


@router.message(AdminAuth.set_password)
async def set_admin_password(message: Message, state: FSMContext):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞, –µ—Å–ª–∏ –µ–≥–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ –±—ã–ª–æ.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç –≤—Ö–æ–¥—è—â–µ–≥–æ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞.
        state (FSMContext): –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–¥–º–∏–Ω–∞ –≤ —Ä–∞–º–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
    """
    
    data = await StateUtils.prepare_next_state(message, state)
    new_password = message.text.strip()
    
    if not Validator.validate_password(new_password):
        await message.answer("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –±–æ–ª–µ–µ", reply_markup=await BackButtons.back_to_phone())
        return
    
    await state.update_data(new_password=new_password)
    await message.answer("üîÑ –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –µ—â—ë —Ä–∞–∑ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",  reply_markup=await BackButtons.back_to_phone())
    await state.set_state(AdminAuth.confirm_password)