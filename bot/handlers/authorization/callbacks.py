import asyncio

from aiogram.fsm.context import FSMContext
from aiogram import F, Router
from aiogram.types import CallbackQuery

from app.api.handlers.normalize import normalize_phone
from bot.keyboards.customer import CustomerKeyboards
from bot.keyboards.backbuttons import BackButtons
from bot.keyboards.basic import BasicKeyboards
from bot.states.admin import AdminAuth

router = Router()


@router.callback_query(F.data == "enter")
async def process_phone(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ –∫–Ω–æ–ø–∫–µ '–í–æ–π—Ç–∏' –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    """

    
    await asyncio.sleep(0.2)
    await callback.answer()
    
    
    sent = await callback.message.edit_text("–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.", reply_markup=await BackButtons.back_to_welcoming_screen())
    
    
    await state.set_state(AdminAuth.waiting_for_phone)
    await state.update_data(last_bot_message=sent.message_id)

    
@router.callback_query(F.data == "back_to_welcoming_screen")
async def back_to_welcoming_screen(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ –∫–Ω–æ–ø–∫–µ '–ù–∞–∑–∞–¥' –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –º–µ–Ω—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.
    """
    
    await asyncio.sleep(0.2)
    await state.clear()
    
    
    welcoming_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
        "–Ø ‚Äî —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –°–î–≠–ö.\n\n"
        "–†–∞–±–æ—Ç–∞—é –ø–æ –∞–¥—Ä–µ—Å—É:\n" 
        "–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –≥. –î–∞–Ω–∫–æ–≤,\n 1-–π –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ø–µ—Ä–µ—É–ª–æ–∫, 3\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É."
    )
    
    
    await callback.message.edit_text(welcoming_text, reply_markup=await BasicKeyboards.get_welcoming_kb())


@router.callback_query(F.data == "back_to_phone")
async def back_to_phone_screen(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ –∫–Ω–æ–ø–∫–µ '–ù–∞–∑–∞–¥' –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ –≤–≤–æ–¥—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    """
    
    await asyncio.sleep(0.2)
    await callback.answer()
    await state.clear()
    
    
    await callback.message.edit_text("–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.", reply_markup=await BackButtons.back_to_welcoming_screen())
    
    
    await state.set_state(AdminAuth.waiting_for_phone)
    

@router.callback_query(F.data.in_(["continue", "cancel"]))
async def without_password(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ –∫–Ω–æ–ø–∫–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å.
    """
    
    data = await state.get_data()
    #last_bot_message_id = data.get("last_bot_message")
    phone_raw = data.get("phone")
    phone = await normalize_phone(phone_raw)


    await asyncio.sleep(0.2)    
    await callback.answer("–î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å!")
    
    
    await callback.message.edit_text((
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—É—é, –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏. üöÄ\n"
        "–ù–µ –Ω—É–∂–Ω–æ –ª–æ–º–∞—Ç—å –≥–æ–ª–æ–≤—É ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ, –∏ —è –≤—Å—ë —Å–¥–µ–ª–∞—é –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç! üíº‚ú®\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏, –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üòäüëç"
    ), reply_markup=await CustomerKeyboards.customer_kb())
    
    
    await asyncio.sleep(1)
    #await delete_prev_messages(callback, last_bot_message_id)
    await state.clear()
    await state.update_data(phone=phone)