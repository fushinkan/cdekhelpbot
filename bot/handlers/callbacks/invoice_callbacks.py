from aiogram.fsm.context import FSMContext
from aiogram import F, Router
from aiogram.types import CallbackQuery

from bot.states.invoice import InvoiceForm
from bot.utils.state import StateUtils
from bot.handlers.authorization.main_menu import proceed_to_main_menu
from bot.keyboards.backbuttons import BackButtons

router = Router()


@router.callback_query(F.data == "no")
async def no_extra_services(callback: CallbackQuery, state: FSMContext):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–¥–∫—É –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.

    Args:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    
    data = await StateUtils.prepare_next_state(obj=callback, state=state)  
    sent = await StateUtils.send_summary(message=callback.message, data=data, for_admin=False)
    
    await state.update_data(last_bot_message=sent.message_id)
    


@router.callback_query(F.data == "yes")
async def yes_extra_services(callback: CallbackQuery, state: FSMContext):
    """
    –°–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥–∞—Ö.

    Args:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    
    data = await StateUtils.prepare_next_state(obj=callback, state=state)  
    sent = await callback.message.answer("üõ†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏", reply_markup=await BackButtons.back_to_insurance_amount())
    
    await StateUtils.push_state_to_history(state=state, new_state=InvoiceForm.extra_services)
    await state.set_state(InvoiceForm.extra_services)
    
    await state.update_data(last_bot_message=sent.message_id)
    
    await callback.answer()

@router.callback_query(F.data == "cancel")
async def cancel_extra_services(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ –∫–Ω–æ–ø–∫–µ '–û—Ç–º–µ–Ω–∞' –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å

    Args:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    
    data = await StateUtils.prepare_next_state(obj=callback, state=state) 
     
    await proceed_to_main_menu(user_data=data, message=callback.message, state=state)