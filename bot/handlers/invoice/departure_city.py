from aiogram.fsm.context import FSMContext
from aiogram import Router
from aiogram.types import Message

from bot.states.invoice import InvoiceForm
from bot.keyboards.backbuttons import BackButtons
from bot.utils.invoice import StateUtils


router = Router()


@router.message(InvoiceForm.departure_city)
async def get_departure_city(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Ä–∞–º–∫–∞—Ö —Ñ–æ—Ä–º—ã InvoiceForm.

    Args:
        message (Message): –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã.
    """
    
    data = await StateUtils.prepare_next_state(obj=message, state=state)
    departure_city = message.text.strip()   
    await state.update_data(departure_city=departure_city)

    if await StateUtils.edit_invoice(data=data, message=message, state=state):
        return
    
    await state.set_state(InvoiceForm.departure_address)
    await StateUtils.push_state_to_history(state=state, new_state=InvoiceForm.departure_address)
    
    sent = await message.answer("üìç –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è/–∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞ üè†", reply_markup=await BackButtons.back_to_departure_city())
    
    await state.update_data(last_bot_message=sent.message_id)
