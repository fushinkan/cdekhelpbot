from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

class CustomerKeyboards():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    
    @classmethod
    async def password_kb(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîí –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å", callback_data="set_password"),
            InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue")],
        ])
    
    @classmethod  
    async def customer_kb(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìù –ù–∞–∫–ª–∞–¥–Ω–∞—è", callback_data="create_invoice"), InlineKeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
            [InlineKeyboardButton(text="üí∞ –¢–∞—Ä–∏—Ñ—ã", callback_data="tariffs"), InlineKeyboardButton(text="‚ûï –£—Å–ª—É–≥–∏", callback_data="services")],
            [InlineKeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å –º–µ—Ä—á", callback_data="get_merch")],
            [InlineKeyboardButton(text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
            [InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="back_to_welcoming_screen")]
        ])
        
    @classmethod
    async def edit_or_confirm(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úèÔ∏è –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è", callback_data="edit_invoice_departure_city"), InlineKeyboardButton(text="‚úèÔ∏è –ì–æ—Ä–æ–¥ –ø–æ–ª—É—á–∞—Ç–µ–ª—è", callback_data="edit_invoice_recipient_city")],
            [InlineKeyboardButton(text="‚úèÔ∏è –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è", callback_data="edit_invoice_departure_address"), InlineKeyboardButton(text="‚úèÔ∏è –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="edit_invoice_recipient_address")],
            [InlineKeyboardButton(text="‚úèÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è", callback_data="edit_invoice_recipient_phone"), InlineKeyboardButton(text="‚úèÔ∏è –°—É–º–º–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏", callback_data="edit_invoice_insurance_amount")],
            
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm"), 
             InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
        ])
        
        
    @classmethod
    async def extra_services(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="yes"), InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="no")]
        ])
        
        
    @classmethod
    async def edit_or_confirm_agreement(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úèÔ∏è –ò–ù–ù", callback_data="editt_contractor_tin_number"), InlineKeyboardButton(text="‚úèÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data="editt_contractor_phone")],
            [InlineKeyboardButton(text="‚úÖ –ó–∞–∫–ª—é—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä", callback_data="allow_agreement"), InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="back_to_welcoming_screen")]
        ])
        
    
    @classmethod
    async def get_main_titles(cls, *, titles: list[str], data: dict):
        keyboard = InlineKeyboardBuilder()
        
        for title in titles:
            keyboard.add(
                InlineKeyboardButton(
                    text=title,
                    callback_data=f"tariff:{title}"
                )
            )
        
        callback_data = "admin_panel" if data.get("role") == "admin" else "back_to_menu"
        
        keyboard.row(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=callback_data
            )
        )
        
        return keyboard.adjust(2).as_markup()
    
    
    @classmethod
    async def get_sub_titles(cls, *, subtitles: list[str]):
        keyboard = InlineKeyboardBuilder()
        
        for sub in subtitles:
            keyboard.add(
                InlineKeyboardButton(
                    text=sub,
                    callback_data=f"subtariff:{sub}"
                )
            )
        
        keyboard.row(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data="tariffs"
            )
        )    
            
        return keyboard.adjust(1).as_markup()
    
    
    @classmethod
    async def get_back_to_parent_tariff(cls, *, parent_tariff: str):
        keyboard = InlineKeyboardBuilder()
        
        keyboard.add(
            InlineKeyboardButton(
                text=f"‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"tariff:{parent_tariff}"
            )
        )
        
        return keyboard.as_markup()
